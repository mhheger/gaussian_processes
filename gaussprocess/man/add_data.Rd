% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/structure.R
\name{add_data}
\alias{add_data}
\title{adding data to a gp-object}
\usage{
add_data(obj, X_learn, y, noise = 0.1)
}
\arguments{
\item{obj}{a instance of class "gp"}

\item{X_learn}{either a vector, a matrix, a data.frame or a list of points
with numerical values.}

\item{y}{either a numerical vector or in the case that X_learn is a data.frame
with named columns y is also allowed to be a character, that refers to the name
of one column of X_learn}

\item{noise}{a non-negative numerical value, that describes the standard deviation
of the noise}
}
\value{
a modified version of obj. It is possible to pipe this function due to
it's invisible output.
}
\description{
adding data to a gp-object
}
\details{
Members of the 'gp'-class are modified via reference, such that the
object will be modified just by the call of 'add_data'. You do not need
to save the changes by yourself. If you do not want to have does changes,
then you might have to clone the object before passing it to 'add_data'
}
\examples{
library(dplyr) #to include pipe-operator
# Generating input data
input_x <- 1:100
input_y <- sin(0.5*input_x)

# one way to use this function
p <- new.gp()
add_data(p, input_x, input_y)

# an equivalent way to get to the same result:
new.gp() \%>\% add_data(input_x, input_y) -> p

# it is also possible to add data using data.frames

df <- data.frame(x = input_x, y = input_y)

#now we use the character "y" to refer to the column of df with name y
new.gp() \%>\% add_data(df, "y") -> p

}
